
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIMPLICATIONleftDISJUNCTIONleftCONJUNCTIONleftNOTATOM CONJUNCTION DISJUNCTION IMPLICATION LPAREN NOT RPAREN\n    expression  : ATOM\n                | NOT expression\n                | LPAREN expression RPAREN\n                | expression CONJUNCTION expression\n                | expression DISJUNCTION expression\n                | expression IMPLICATION expression\n    '
    
_lr_action_items = {'ATOM':([0,3,4,5,6,7,],[2,2,2,2,2,2,]),'NOT':([0,3,4,5,6,7,],[3,3,3,3,3,3,]),'LPAREN':([0,3,4,5,6,7,],[4,4,4,4,4,4,]),'$end':([1,2,8,10,11,12,13,],[0,-1,-2,-4,-5,-6,-3,]),'CONJUNCTION':([1,2,8,9,10,11,12,13,],[5,-1,-2,5,-4,5,5,-3,]),'DISJUNCTION':([1,2,8,9,10,11,12,13,],[6,-1,-2,6,-4,-5,6,-3,]),'IMPLICATION':([1,2,8,9,10,11,12,13,],[7,-1,-2,7,-4,-5,7,-3,]),'RPAREN':([2,8,9,10,11,12,13,],[-1,-2,13,-4,-5,-6,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,4,5,6,7,],[1,8,9,10,11,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> ATOM','expression',1,'p_expression','pl.py',43),
  ('expression -> NOT expression','expression',2,'p_expression','pl.py',44),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','pl.py',45),
  ('expression -> expression CONJUNCTION expression','expression',3,'p_expression','pl.py',46),
  ('expression -> expression DISJUNCTION expression','expression',3,'p_expression','pl.py',47),
  ('expression -> expression IMPLICATION expression','expression',3,'p_expression','pl.py',48),
]
